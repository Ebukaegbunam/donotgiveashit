{"ast":null,"code":"var _jsxFileName = \"/Users/ebukaegbunam/dev/giveashitometer/src/components/RatingPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport * as THREE from 'three';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RatingPage = ({\n  nameOrInitials,\n  rating,\n  onRatingChange\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const mountRef = useRef(null);\n  useEffect(() => {\n    const currentMount = mountRef.current;\n\n    // Scene setup\n    const scene = new THREE.Scene();\n\n    // Camera setup\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    camera.position.z = 5;\n\n    // Renderer setup\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true,\n      alpha: true\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.setClearColor(0x000000, 0);\n    currentMount.appendChild(renderer.domElement);\n\n    // Create a rotating torus\n    const geometry = new THREE.TorusGeometry(3, 0.5, 16, 100);\n\n    // Create gradient material\n    const material = new THREE.ShaderMaterial({\n      uniforms: {\n        time: {\n          value: 0\n        },\n        colorA: {\n          value: new THREE.Color(0xff0099)\n        },\n        colorB: {\n          value: new THREE.Color(0x493240)\n        }\n      },\n      vertexShader: `\n        varying vec2 vUv;\n        void main() {\n          vUv = uv;\n          gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n        }\n      `,\n      fragmentShader: `\n        uniform float time;\n        uniform vec3 colorA;\n        uniform vec3 colorB;\n        varying vec2 vUv;\n        \n        void main() {\n          vec3 color = mix(colorA, colorB, vUv.x + sin(time * 0.5) * 0.5);\n          gl_FragColor = vec4(color, 1.0);\n        }\n      `,\n      wireframe: true\n    });\n    const torus = new THREE.Mesh(geometry, material);\n    scene.add(torus);\n\n    // Add some particles for depth\n    const particlesGeometry = new THREE.BufferGeometry();\n    const particlesCount = 2000;\n    const posArray = new Float32Array(particlesCount * 3);\n    for (let i = 0; i < particlesCount * 3; i++) {\n      posArray[i] = (Math.random() - 0.5) * 20;\n    }\n    particlesGeometry.setAttribute('position', new THREE.BufferAttribute(posArray, 3));\n    const particlesMaterial = new THREE.PointsMaterial({\n      size: 0.02,\n      color: 0xffffff,\n      transparent: true,\n      opacity: 0.5,\n      blending: THREE.AdditiveBlending\n    });\n    const particlesMesh = new THREE.Points(particlesGeometry, particlesMaterial);\n    scene.add(particlesMesh);\n\n    // Animation\n    let time = 0;\n    const clock = new THREE.Clock();\n    const animate = () => {\n      time += clock.getDelta();\n      material.uniforms.time.value = time;\n      torus.rotation.x += 0.003;\n      torus.rotation.y += 0.005;\n      particlesMesh.rotation.y += 0.001;\n\n      // Make torus size responsive to the rating\n      const scale = 0.5 + rating / 100 * 1.5;\n      torus.scale.set(scale, scale, scale);\n      renderer.render(scene, camera);\n      requestAnimationFrame(animate);\n    };\n    animate();\n\n    // Handle resize\n    const handleResize = () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n    window.addEventListener('resize', handleResize);\n\n    // Cleanup\n    return () => {\n      currentMount.removeChild(renderer.domElement);\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [rating]);\n  const getRatingText = () => {\n    if (rating < 20) return \"Barely any...\";\n    if (rating < 40) return \"Just a little...\";\n    if (rating < 60) return \"A moderate amount...\";\n    if (rating < 80) return \"Quite a lot...\";\n    return \"Absolutely ALL the shits!\";\n  };\n  const handleStartOver = () => {\n    navigate('/');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mountRef,\n      className: \"canvas-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Givashitometer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"user-name\",\n          children: nameOrInitials\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), \", how much do you give a shit about \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"company-name\",\n          children: \"TrouveAI\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 98\n        }, this), \"?\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slider-container\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"0\",\n          max: \"100\",\n          value: rating,\n          className: \"slider\",\n          onChange: e => onRatingChange(parseInt(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rating-label\",\n        children: [rating, \"% - \", getRatingText()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleStartOver,\n        children: \"Start Over\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n};\n_s(RatingPage, \"WIuoaXNZ3DseunnJwF54UnnBKzI=\", false, function () {\n  return [useNavigate];\n});\n_c = RatingPage;\nexport default RatingPage;\nvar _c;\n$RefreshReg$(_c, \"RatingPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","THREE","jsxDEV","_jsxDEV","RatingPage","nameOrInitials","rating","onRatingChange","_s","navigate","mountRef","currentMount","current","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","position","z","renderer","WebGLRenderer","antialias","alpha","setSize","setClearColor","appendChild","domElement","geometry","TorusGeometry","material","ShaderMaterial","uniforms","time","value","colorA","Color","colorB","vertexShader","fragmentShader","wireframe","torus","Mesh","add","particlesGeometry","BufferGeometry","particlesCount","posArray","Float32Array","i","Math","random","setAttribute","BufferAttribute","particlesMaterial","PointsMaterial","size","color","transparent","opacity","blending","AdditiveBlending","particlesMesh","Points","clock","Clock","animate","getDelta","rotation","x","y","scale","set","render","requestAnimationFrame","handleResize","aspect","updateProjectionMatrix","addEventListener","removeChild","removeEventListener","getRatingText","handleStartOver","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","type","min","max","onChange","e","parseInt","target","onClick","_c","$RefreshReg$"],"sources":["/Users/ebukaegbunam/dev/giveashitometer/src/components/RatingPage.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport * as THREE from 'three';\n\nconst RatingPage = ({ nameOrInitials, rating, onRatingChange }) => {\n  const navigate = useNavigate();\n  const mountRef = useRef(null);\n  \n  useEffect(() => {\n    const currentMount = mountRef.current;\n    \n    // Scene setup\n    const scene = new THREE.Scene();\n    \n    // Camera setup\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    camera.position.z = 5;\n    \n    // Renderer setup\n    const renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.setClearColor(0x000000, 0);\n    currentMount.appendChild(renderer.domElement);\n    \n    // Create a rotating torus\n    const geometry = new THREE.TorusGeometry(3, 0.5, 16, 100);\n    \n    // Create gradient material\n    const material = new THREE.ShaderMaterial({\n      uniforms: {\n        time: { value: 0 },\n        colorA: { value: new THREE.Color(0xff0099) },\n        colorB: { value: new THREE.Color(0x493240) }\n      },\n      vertexShader: `\n        varying vec2 vUv;\n        void main() {\n          vUv = uv;\n          gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n        }\n      `,\n      fragmentShader: `\n        uniform float time;\n        uniform vec3 colorA;\n        uniform vec3 colorB;\n        varying vec2 vUv;\n        \n        void main() {\n          vec3 color = mix(colorA, colorB, vUv.x + sin(time * 0.5) * 0.5);\n          gl_FragColor = vec4(color, 1.0);\n        }\n      `,\n      wireframe: true\n    });\n    \n    const torus = new THREE.Mesh(geometry, material);\n    scene.add(torus);\n    \n    // Add some particles for depth\n    const particlesGeometry = new THREE.BufferGeometry();\n    const particlesCount = 2000;\n    \n    const posArray = new Float32Array(particlesCount * 3);\n    \n    for(let i = 0; i < particlesCount * 3; i++) {\n      posArray[i] = (Math.random() - 0.5) * 20;\n    }\n    \n    particlesGeometry.setAttribute('position', new THREE.BufferAttribute(posArray, 3));\n    \n    const particlesMaterial = new THREE.PointsMaterial({\n      size: 0.02,\n      color: 0xffffff,\n      transparent: true,\n      opacity: 0.5,\n      blending: THREE.AdditiveBlending\n    });\n    \n    const particlesMesh = new THREE.Points(particlesGeometry, particlesMaterial);\n    scene.add(particlesMesh);\n    \n    // Animation\n    let time = 0;\n    const clock = new THREE.Clock();\n    \n    const animate = () => {\n      time += clock.getDelta();\n      material.uniforms.time.value = time;\n      \n      torus.rotation.x += 0.003;\n      torus.rotation.y += 0.005;\n      particlesMesh.rotation.y += 0.001;\n      \n      // Make torus size responsive to the rating\n      const scale = 0.5 + (rating / 100) * 1.5;\n      torus.scale.set(scale, scale, scale);\n      \n      renderer.render(scene, camera);\n      requestAnimationFrame(animate);\n    };\n    \n    animate();\n    \n    // Handle resize\n    const handleResize = () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n    \n    window.addEventListener('resize', handleResize);\n    \n    // Cleanup\n    return () => {\n      currentMount.removeChild(renderer.domElement);\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [rating]);\n\n  const getRatingText = () => {\n    if (rating < 20) return \"Barely any...\";\n    if (rating < 40) return \"Just a little...\";\n    if (rating < 60) return \"A moderate amount...\";\n    if (rating < 80) return \"Quite a lot...\";\n    return \"Absolutely ALL the shits!\";\n  };\n\n  const handleStartOver = () => {\n    navigate('/');\n  };\n\n  return (\n    <div className=\"page\">\n      <div ref={mountRef} className=\"canvas-container\"></div>\n      <div className=\"content\">\n        <h1>Givashitometer</h1>\n        <p>\n          <span className=\"user-name\">{nameOrInitials}</span>, how much do you give a shit about <span className=\"company-name\">TrouveAI</span>?\n        </p>\n        <div className=\"slider-container\">\n          <input\n            type=\"range\"\n            min=\"0\"\n            max=\"100\"\n            value={rating}\n            className=\"slider\"\n            onChange={(e) => onRatingChange(parseInt(e.target.value))}\n          />\n        </div>\n        <div className=\"rating-label\">{rating}% - {getRatingText()}</div>\n        <button onClick={handleStartOver}>Start Over</button>\n      </div>\n    </div>\n  );\n};\n\nexport default RatingPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}